<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="27" passed="25">
  <reporter-output>
  </reporter-output>
  <suite name="EmployeesRestApisuite" duration-ms="11067" started-at="2019-11-11T21:50:04 IST" finished-at="2019-11-11T21:50:15 IST">
    <groups>
    </groups>
    <test name="EmployeesRestApiTest" duration-ms="11067" started-at="2019-11-11T21:50:04 IST" finished-at="2019-11-11T21:50:15 IST">
      <class name="com.employeeapi.testCases.TC003_POST_Employees_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="setup" is-config="true" duration-ms="14" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="createEmployee" is-config="true" duration-ms="948" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="checkContentType" duration-ms="4" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="checkResponseBody" duration-ms="3" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="checkResponseTime" duration-ms="3" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="checkStatusCode" duration-ms="4" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="checkStatusLine" duration-ms="2" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC003_POST_Employees_Record@6737fd8f]" name="tearDown" is-config="true" duration-ms="1" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC003_POST_Employees_Record -->
      <class name="com.employeeapi.testCases.TC004_PUT_Employees_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="setup" is-config="true" duration-ms="11" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="createEmployee" is-config="true" duration-ms="873" started-at="2019-11-11T21:50:12 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="checkContentType" duration-ms="3" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="checkResponseBody" duration-ms="3" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="checkResponseTime" duration-ms="2" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="checkStatusCode" duration-ms="3" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="checkStatusLine" duration-ms="3" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC004_PUT_Employees_Record@72b6cbcc]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC004_PUT_Employees_Record -->
      <class name="com.employeeapi.testCases.TC005_DELETE_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="setup" is-config="true" duration-ms="12" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="createEmployee" is-config="true" duration-ms="2300" started-at="2019-11-11T21:50:13 IST" finished-at="2019-11-11T21:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="checkContentType" duration-ms="3" started-at="2019-11-11T21:50:15 IST" finished-at="2019-11-11T21:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="checkResponseBody" duration-ms="4" started-at="2019-11-11T21:50:15 IST" finished-at="2019-11-11T21:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="checkResponseTime" duration-ms="3" started-at="2019-11-11T21:50:15 IST" finished-at="2019-11-11T21:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="checkStatusCode" duration-ms="3" started-at="2019-11-11T21:50:15 IST" finished-at="2019-11-11T21:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="checkStatusLine" duration-ms="3" started-at="2019-11-11T21:50:15 IST" finished-at="2019-11-11T21:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC005_DELETE_Employee_Record@a7e666]" name="tearDown" is-config="true" duration-ms="1" started-at="2019-11-11T21:50:15 IST" finished-at="2019-11-11T21:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC005_DELETE_Employee_Record -->
      <class name="com.employeeapi.testCases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="setup" is-config="true" duration-ms="49" started-at="2019-11-11T21:50:04 IST" finished-at="2019-11-11T21:50:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="getAllEmployees" is-config="true" duration-ms="5082" started-at="2019-11-11T21:50:04 IST" finished-at="2019-11-11T21:50:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="checkContentType" duration-ms="14" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="checkResponseBody" duration-ms="41" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="FAIL" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="checkResponseTime" duration-ms="15" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:09 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.employeeapi.testCases.TC001_Get_All_Employees.checkResponseTime(TC001_Get_All_Employees.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="checkServerType" duration-ms="3" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="checkStatusCode" duration-ms="4" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="checkStatusLine" duration-ms="5" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@63e2203c]" name="tearDown" is-config="true" duration-ms="2" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC001_Get_All_Employees -->
      <class name="com.employeeapi.testCases.TC002_Get_Single_Employees_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="setup" is-config="true" duration-ms="8" started-at="2019-11-11T21:50:09 IST" finished-at="2019-11-11T21:50:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="getAllEmployees" is-config="true" duration-ms="1275" started-at="2019-11-11T21:50:10 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="checkContentType" duration-ms="3" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="checkResponseBody" duration-ms="5" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at com.employeeapi.testCases.TC002_Get_Single_Employees_Record.checkResponseBody(TC002_Get_Single_Employees_Record.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="checkResponseTime" duration-ms="4" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="checkServerType" duration-ms="3" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="checkStatusCode" duration-ms="5" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="checkStatusLine" duration-ms="4" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employees_Record@1efed156]" name="tearDown" is-config="true" duration-ms="1" started-at="2019-11-11T21:50:11 IST" finished-at="2019-11-11T21:50:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC002_Get_Single_Employees_Record -->
    </test> <!-- EmployeesRestApiTest -->
  </suite> <!-- EmployeesRestApisuite -->
</testng-results>
